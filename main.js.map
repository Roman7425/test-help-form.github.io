{"version":3,"sources":["./src/app/main-header/main-header.component.ts","./src/app/main-header/main-header.component.html","./src/environments/environment.ts","./src/app/help-form/help-form.component.ts","./src/app/help-form/help-form.component.html","./src/app/list-messages/list-messages.component.ts","./src/app/list-messages/list-messages.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/firebase.service.ts","./src/app/app.module.ts","./src/app/services/database.service.ts","./src/app/main-header/log/log.component.ts","./src/app/main-header/log/log.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FirebaseService } from '../services/firebase.service';\nimport { LogComponent } from './log/log.component';\n\n@Component({\n  selector: 'app-main-header',\n  templateUrl: './main-header.component.html',\n  styleUrls: ['./main-header.component.scss']\n})\nexport class MainHeaderComponent implements OnInit {\n\n  public currentUser: string = '';\n\n  constructor(\n    private _matDialog: MatDialog,\n    private _firebase: FirebaseService\n  ) { }\n\n  ngOnInit(): void {\n\n    this._firebase.currentUser.subscribe(\n      (response) => {\n        if (response) {\n          this.currentUser = response;\n        }\n      }\n    );\n  }\n\n  public login(): void {\n    const dialog = this._matDialog.open(LogComponent, {\n      panelClass: 'log.component',\n      disableClose: true,\n      data: 'login'\n    });\n  }\n\n  public logout(): void {\n    this._firebase.logout();\n    this.currentUser = null;\n  }\n\n  public reg(): void {\n    const dialog = this._matDialog.open(LogComponent, {\n      panelClass: 'log.component',\n      disableClose: true,\n      data: 'reg'\n    });\n  }\n\n}\n","<div class=\"header\">\n    <button *ngIf=\"!currentUser\" (click)=\"login()\">\n        login\n    </button>\n    <button *ngIf=\"currentUser\">\n        {{currentUser}}\n    </button>\n    <button *ngIf=\"currentUser\" (click)=\"logout()\">\n        logout\n    </button>\n    <button *ngIf=\"!currentUser\" (click)=\"reg()\">\n        registration\n    </button>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: \"AIzaSyCsWwLInpjEGkbAd1rtlQDeyk3dRReVSJY\",\n    authDomain: \"project-71708.firebaseapp.com\",\n    databaseURL: \"https://project-71708-default-rtdb.firebaseio.com\",\n    projectId: \"project-71708\",\n    storageBucket: \"project-71708.appspot.com\",\n    messagingSenderId: \"1089644411347\",\n    appId: \"1:1089644411347:web:53ead188c280eefd201726\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DatabaseService } from '../services/database.service';\nimport { FirebaseService } from '../services/firebase.service';\n\n@Component({\n  selector: 'app-help-form',\n  templateUrl: './help-form.component.html',\n  styleUrls: ['./help-form.component.scss']\n})\nexport class HelpFormComponent implements OnInit {\n\n  public helpForm: FormGroup;\n  public currentUser: string = '';\n\n  constructor(\n    private _firebaseService: FirebaseService,\n    private _databaseService: DatabaseService\n  ) { }\n\n  ngOnInit(): void {\n    this.helpForm = new FormGroup({\n      name: new FormControl('', Validators.required),\n      phone: new FormControl('', [Validators.required, Validators.minLength(8), Validators.pattern(\"^[0-9]*$\")]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      message: new FormControl('', Validators.required)\n    });\n\n    this.helpForm.get('phone').valueChanges.subscribe(\n      (value) => {\n      }\n    );\n\n    this._firebaseService.currentUser.subscribe(\n      (response) => {\n        if (response) {\n          this.currentUser = response;\n        }\n      }\n    );\n  }\n\n  public saveMessage(): void {\n    let message = {};\n    message['name'] = this.helpForm.get('name').value;\n    message['phone'] = this.helpForm.get('phone').value;\n    message['email'] = this.helpForm.get('email').value;\n    message['message'] = this.helpForm.get('message').value;\n\n    this._databaseService.createMessage(message);\n\n    this.helpForm.reset();\n  }\n\n}\n","<div class=\"form-wrap\">\n    <div class=\"header-form\">\n        <h1>\n            Get in touch\n        </h1>\n        <p>\n            Leave your message and we'll get back to you shortly.\n        </p>\n    </div>\n    <form [formGroup]=\"helpForm\">\n        <div class=\"form-group\">\n            <label for=\"exampleInputEmail1\">Name</label>\n            <input formControlName=\"name\" [class.input-error]=\"helpForm.get('name').invalid && helpForm.get('name').dirty && helpForm.get('name').touched\" type=\"text\" class=\"form-control\" placeholder=\"name\">\n            <small class=\"errors\" *ngIf=\"!helpForm.get('name').valid && helpForm.get('name').dirty && helpForm.get('name').touched\">\n                empty name!\n            </small>\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"exampleInputEmail1\">Phone</label>\n            <input formControlName=\"phone\" [class.input-error]=\"helpForm.get('phone').invalid && helpForm.get('phone').dirty && helpForm.get('phone').touched\" type=\"text\" class=\"form-control\" placeholder=\"phone\">\n            <small class=\"errors\" *ngIf=\"helpForm.get('phone').errors && helpForm.get('phone').errors?.required && helpForm.get('phone').dirty && helpForm.get('phone').touched\">\n                empty phone!\n            </small>\n            <small class=\"errors\" *ngIf=\"helpForm.get('phone').errors && helpForm.get('phone').errors.pattern && helpForm.get('phone').touched\">\n                invalid phone number!\n            </small>\n            <small class=\"errors\" *ngIf=\"helpForm.get('phone').errors && helpForm.get('phone').errors.minlength && helpForm.get('phone').touched\">\n                min length 8!\n            </small>\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"exampleInputEmail1\">Email address</label>\n            <input formControlName=\"email\" [class.input-error]=\"helpForm.get('email').invalid && helpForm.get('email').dirty && helpForm.get('email').touched\" type=\"email\" class=\"form-control\" placeholder=\"email\">\n            <small class=\"errors\" *ngIf=\"helpForm.get('email').errors && helpForm.get('email').errors.required && helpForm.get('email').dirty && helpForm.get('email').touched\">\n                empty email!\n            </small>\n            <small class=\"errors\" *ngIf=\"helpForm.get('email').errors && helpForm.get('email').errors.email && helpForm.get('email').touched\">\n                invalid email!\n            </small>\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"exampleInputEmail1\">Message</label>\n            <textarea formControlName=\"message\" [class.input-error]=\"helpForm.get('message').invalid && helpForm.get('message').dirty && helpForm.get('message').touched\" type=\"text\" class=\"form-control\" placeholder=\"yours message\">\n            </textarea>\n        </div>\n        <button type=\"submit\" (click)=\"saveMessage()\" [disabled]=\"!helpForm.valid\" class=\"btn btn-primary\">Submit</button>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { DatabaseService } from '../services/database.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { stringify } from '@angular/compiler/src/util';\n\n@Component({\n  selector: 'app-list-messages',\n  templateUrl: './list-messages.component.html',\n  styleUrls: ['./list-messages.component.scss']\n})\nexport class ListMessagesComponent implements OnInit {\n\n  public messages: Array<any> = [];\n  public dataTable: Array<any> = [];\n  public dataSource: MatTableDataSource<any>;\n  public displayedColumns: Array<string> = ['name', 'phone', 'email', 'message'];\n  constructor(\n    private _databaseService: DatabaseService\n  ) { }\n\n  ngOnInit(): void {\n    this._databaseService.getAllMessages().then(\n      (response) => {\n        this.messages = response;\n        this.dataTable = this.messages;\n        this.dataSource = new MatTableDataSource(this.messages[0]);\n        this.dataSource['data'] = this.messages;\n      }\n    );\n  }\n\n}\n","<div class=\"form-wrap\">\n\t<div class=\"table\">\n\t\t<table *ngIf=\"dataTable.length\" mat-table [dataSource]=\"dataSource\">\n\t\t\t<ng-container matColumnDef=\"name\">\n\t\t\t\t<th mat-header-cell *matHeaderCellDef>\n\t\t\t\t\tname\n\t\t\t\t</th>\n\t\t\t\t<td mat-cell *matCellDef=\"let message\">{{ message.name }}</td>\n\t\t\t</ng-container>\n\n\t\t\t<ng-container matColumnDef=\"phone\">\n\t\t\t\t<th mat-header-cell *matHeaderCellDef>\n\t\t\t\t\tphone\n\t\t\t\t</th>\n\t\t\t\t<td mat-cell *matCellDef=\"let message\">{{ message.phone }}</td>\n\t\t\t\t<td mat-footer-cell *matFooterCellDef></td>\n\t\t\t</ng-container>\n\n\t\t\t<ng-container matColumnDef=\"email\">\n\t\t\t\t<th mat-header-cell *matHeaderCellDef>\n\t\t\t\t\temail\n\t\t\t\t</th>\n\t\t\t\t<td mat-cell *matCellDef=\"let message\" class=\"text-align-right\">{{ message.email }}</td>\n\t\t\t</ng-container>\n\n\t\t\t<ng-container matColumnDef=\"message\">\n\t\t\t\t<th mat-header-cell *matHeaderCellDef>\n\t\t\t\t\tmessage\n\t\t\t\t</th>\n\t\t\t\t<td mat-cell *matCellDef=\"let message\" class=\"text-align-right\">{{ message.message }}</td>\n\t\t\t</ng-container>\n\n\t\t\t<tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n\t\t\t<tr mat-row *matRowDef=\"let message; columns: displayedColumns\"></tr>\n\t\t</table>\n\t</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FirebaseService } from './services/firebase.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  public title = 'project';\n  public logUser: boolean = false;\n\n  constructor(\n    private _firebaseService: FirebaseService\n  ) {}\n\n  ngOnInit(): void {\n    this._firebaseService.currentUser.subscribe(\n      (response) => {\n        if (response) {\n          this.logUser = true;\n        } else {\n          this.logUser = false;\n        }\n      }\n    );\n  }\n}\n","<app-main-header></app-main-header>\r\n<app-list-messages class=\"main-wrap\" *ngIf=\"logUser\"></app-list-messages>\r\n<app-help-form *ngIf=\"!logUser\" class=\"main-wrap\"></app-help-form>","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { BehaviorSubject, Observable, Observer } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n\n  public currentUser: BehaviorSubject<string> = new BehaviorSubject('');\n  public isLogged: boolean = false;\n\n  constructor(\n    private _firebaseAuth: AngularFireAuth\n  ) { }\n\n  public async singin(email: string, password: string): Promise<any> {\n    await this._firebaseAuth.signInWithEmailAndPassword(email, password).then(\n      (response) => {\n        this.isLogged = true;\n        localStorage.setItem('user', JSON.stringify(response.user));\n        this.currentUser.next(response.user.email);\n      },\n      (error) => {}\n    );\n  }\n\n  public async singup(email: string, password: string) {\n    await this._firebaseAuth.createUserWithEmailAndPassword(email, password).then(\n      (response) => {\n        this.isLogged = true;\n        localStorage.setItem('user', JSON.stringify(response.user));\n        this.currentUser.next(response.user.email);\n      }\n    );\n  }\n\n  public logout() {\n    this._firebaseAuth.signOut();\n    localStorage.removeItem('user');\n    this.currentUser.next('');\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AngularFireModule } from '@angular/fire';\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { AngularFireDatabaseModule } from \"@angular/fire/database\";\nimport { environment } from 'src/environments/environment';\nimport { AngularFirestoreModule } from \"@angular/fire/firestore\";\nimport { CdkTableModule} from '@angular/cdk/table';\nimport { DataSource } from '@angular/cdk/table';\nimport { MatTableModule } from \"@angular/material/table\";\n\nimport { AppComponent } from './app.component';\nimport { HelpFormComponent } from './help-form/help-form.component';\nimport { MainHeaderComponent } from './main-header/main-header.component';\nimport { FirebaseService } from './services/firebase.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LogComponent } from './main-header/log/log.component';\nimport { DatabaseService } from './services/database.service';\nimport { ListMessagesComponent } from './list-messages/list-messages.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HelpFormComponent,\n    MainHeaderComponent,\n    LogComponent,\n    ListMessagesComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatDialogModule,\n    AngularFireModule.initializeApp({\n      apiKey: \"AIzaSyCsWwLInpjEGkbAd1rtlQDeyk3dRReVSJY\",\n      authDomain: \"project-71708.firebaseapp.com\",\n      databaseURL: \"https://project-71708-default-rtdb.firebaseio.com\",\n      projectId: \"project-71708\",\n      storageBucket: \"project-71708.appspot.com\",\n      messagingSenderId: \"1089644411347\",\n      appId: \"1:1089644411347:web:53ead188c280eefd201726\"\n    }),\n    AngularFireDatabaseModule,\n    AngularFirestoreModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CdkTableModule,\n    MatTableModule\n  ],\n  providers: [\n    FirebaseService,\n    DatabaseService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable, Observer } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n\n  constructor(\n    private _firestoreService: AngularFirestore\n  ) { }\n\n\n  public async createMessage(message: any) {\n    await this._firestoreService.collection('messages').add(message).then(\n      (response) => {\n      }\n    );\n  }\n\n  public async getAllMessages() {\n    const snapshot = await this._firestoreService.collection('messages').ref.get();\n    return snapshot.docs.map(doc => doc.data());\n  }\n}\n","import { Component, Inject, NgModule, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FirebaseService } from 'src/app/services/firebase.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-log',\n  templateUrl: './log.component.html',\n  styleUrls: ['./log.component.scss']\n})\nexport class LogComponent implements OnInit {\n\n  public logForm: FormGroup;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private _firebaseService: FirebaseService,\n    private _matDialog: MatDialogRef<LogComponent>\n  ) { }\n\n  ngOnInit(): void {\n    this.logForm = new FormGroup({\n      logEmail: new FormControl('', [Validators.required, Validators.email]),\n      logPassword: new FormControl('', [Validators.required, Validators.minLength(8)])\n    });\n  }\n\n  public async login() {\n    if (this.data === 'login') {\n      await this._firebaseService.singin(this.logForm.get('logEmail').value, this.logForm.get('logPassword').value).then(\n        (response) => {\n          this._matDialog.close();\n        },\n        (error) => { }\n      );\n    }\n\n    if (this.data === 'reg') {\n      await this._firebaseService.singup(this.logForm.get('logEmail').value, this.logForm.get('logPassword').value).then(\n        (response) => {\n          this._matDialog.close();\n        },\n        (error) => { }\n      );\n    }\n  }\n\n}\n","<div class=\"form-wrap\">\n    <form [formGroup]=\"logForm\">\n        <div class=\"form-group\">\n            <label>Email</label>\n            <input formControlName=\"logEmail\" [class.input-error]=\"logForm.get('logEmail').invalid && logForm.get('logEmail').dirty && logForm.get('logEmail').touched\" type=\"email\" class=\"form-control\" placeholder=\"email\">\n            <small class=\"errors\" *ngIf=\"logForm.get('logEmail').errors && logForm.get('logEmail').errors.required && logForm.get('logEmail').dirty && logForm.get('logEmail').touched\">\n                empty email!\n            </small>\n            <small class=\"errors\" *ngIf=\"logForm.get('logEmail').errors && logForm.get('logEmail').errors.email && logForm.get('logEmail').touched\">\n                invalid email!\n            </small>\n        </div>\n\n        <div class=\"form-group\">\n            <label>Password</label>\n            <input formControlName=\"logPassword\" [class.input-error]=\"logForm.get('logPassword').invalid && logForm.get('logPassword').dirty && logForm.get('logPassword').touched\" type=\"password\" class=\"form-control\" placeholder=\"password\">\n            <small class=\"errors\" *ngIf=\"logForm.get('logPassword').errors && logForm.get('logPassword').errors.required && logForm.get('logPassword').dirty && logForm.get('logPassword').touched\">\n                empty password!\n            </small>\n            <small class=\"errors\" *ngIf=\"logForm.get('logPassword').errors && logForm.get('logPassword').errors.minlength && logForm.get('logPassword').touched\">\n                min 8 symbol!\n            </small>\n        </div>\n\n        <button type=\"submit\" *ngIf=\"data === 'login'\" [disabled]=\"!logForm.valid\" (click)=\"login()\" class=\"btn btn-primary\">Login</button>\n        <button type=\"submit\" *ngIf=\"data === 'reg'\" [disabled]=\"!logForm.valid\" (click)=\"login()\" class=\"btn btn-primary\">Signup</button>\n    </form>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}